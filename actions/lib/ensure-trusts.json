{
  "about": {
    "author": "@Kaiconure",
    "notes": "This action should be placed at the top of your idle actions list. Set the vars.ensure_trusts.spells variable in your actions file to customize the trusts."
  },
  "vars": {
    "ensure_trusts": {
      "spells": [],
      "recall_on_mpp": 20,
      "recall_on_hpp": 40,
      "mob_safety_range": 10,
      "recall_on_effects": ["Petrification"]
    }
  },
  "actions": [
    {
      "when": ["me.is_party_leader", "needsTrust(vars.ensure_trusts.spells)"],
      "commands": ["log('Calling trust:', spell.name)", "callTrust()"]
    },
    {
      "when": [
        "me.is_party_leader and actionType == 'idle'",
        "partyAny('is_trust') and hasEffect(member, vars.ensure_trusts.recall_on_effects)"
      ],
      "commands": [
        "log('Release/recall trust', member.name, 'due to debuff', effect.name)",
        "vars.ensure_trusts.stationary or move(member.x, member.y, 5, -1)",
        "wait(1.0)",
        "releaseTrust(member.name)",
        "wait(2.5)",
        "log('Recalling trust', spell.name)",
        "useSpell(me)"
      ]
    },
    {
      "when": [
        "me.is_party_leader and actionType == 'idle'",
        "partyAny('is_magic_trust and mpp <= %f', vars.ensure_trusts.recall_on_mpp) and canUseSpell(trustSpellName(member.name))",
        "mobsInRange(vars.ensure_trusts.mob_safety_range) == 0",
        "member.distance < 6 or not vars.ensure_trusts.stationary"
      ],
      "commands": [
        "log('Release/recall trust', member.name, 'due to mpp at', member.mpp, '%')",
        "vars.ensure_trusts.stationary or move(member.x, member.y, 5, -1)",
        "wait(1.0)",
        "releaseTrust(member.name)",
        "wait(2.5)",
        "log('Recalling trust', spell.name)",
        "useSpell(me)"
      ],
      "scope": "battle"
    },
    {
      "when": [
        "me.is_party_leader and actionType == 'idle'",
        "partyAny('is_trust and hpp <= %f', vars.ensure_trusts.recall_on_hpp) and canUseSpell(trustSpellName(member.name))",
        "mobsInRange(vars.ensure_trusts.mob_safety_range) == 0",
        "member.distance < 6 or not vars.ensure_trusts.stationary"
      ],
      "commands": [
        "log('Release/recall trust', member.name, 'due to HPP at', member.hpp, '%')",
        "vars.ensure_trusts.stationary or move(member.x, member.y, 5, -1)",
        "wait(1.0)",
        "releaseTrust(member.name)",
        "wait(2.5)",
        "log('Recalling trust', spell.name)",
        "useSpell(me)"
      ],
      "scope": "battle"
    }
  ]
}
