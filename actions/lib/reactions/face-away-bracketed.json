{
  "about": {
    "author": "@Kaiconure",
    "notes": [
      "Place this at the very top of your battle section, or at least above any gambit that will turn or move toward the mob.",
      "This will cause you to turn and face away from the mob when certain abilities are used, and then turn back when other",
      "abilities are later used."
    ]
  },
  "vars": {
    "face_away_bracketed": {
      "Amphitrite": {
        "initiators": { "Palsynyxis": true },
        "terminators": { "Painful Whip": true }
      },
      "Cloud of Darkness": {
        "initiators": { "Primordial Surge": true },
        "terminators": { "Waning Vigor": true, "Expunge": true }
      },
      "*": {}
    }
  },
  "actions": [
    {
      "commands": ["setVar('vars.face_away_bracketed.trigger', nil)"],
      "delay": 0,
      "frequency": "infinity",
      "scope": "battle",
      "comment": "This will run exactly once at the start of any battle, and ensure that the trigger is cleared."
    },
    {
      "when": [
        "vars.face_away_bracketed.trigger",
        "enemyUsedAbility()",
        "getMatchingBracketedFaceAwayEnd(vars.face_away_bracketed, enemy_ability, bt)"
      ],
      "commands": [
        "wait(vars.face_away_bracketed.trigger.wait or 2)",
        "not vars.face_away_bracketed.trigger.allow_offensive_magic and resumeOffensiveMagic()",
        "setVar('vars.face_away_bracketed.trigger', nil)",
        "log(enemy_ability.name, 'detected: END BRACKETED FACE-AWAY SEQUENCE')"
      ]
    },
    {
      "when": [
        "bt",
        "not vars.face_away_bracketed.trigger",
        "enemyUsedAbility()",
        "getMatchingBracketedFaceAwayStart(vars.face_away_bracketed, enemy_ability, bt)"
      ],
      "commands": [
        "faceAway(bt)",
        "setVar('vars.face_away_bracketed.trigger', ability_face_away_start)",
        "not vars.face_away_bracketed.trigger.allow_offensive_magic and suppressOffensiveMagic()",
        "log(enemy_ability.name, 'detected: BEGIN BRACKETED FACE-AWAY SEQUENCE ====== ')",
        "wait(2)"
      ],
      "delay": 0
    },
    {
      "when": ["vars.face_away_bracketed.trigger"],
      "commands": ["faceAway(bt)", "wait(1)"],
      "delay": 0
    }
  ]
}
