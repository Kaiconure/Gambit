{
  "about": {
    "author": "@Kaiconure",
    "notes": [
      "Place this at the very top of your battle section, or at least above any gambit that will turn or move toward the mob.",
      "This will cause you to turn and face away from the mob when certain spells are being used, and then turn when casting completes."
    ]
  },
  "vars": {
    "face_away_on_spell": {
      "Glavoid": {
        "spells": {
          "*": {
            "wait": 4,
            "no_turn": true,
            "comment": [
              "Glavoid absorbs magic damage (including those from weapon skills) while casting spells.",
              "The no_turn flag means we won't actually face away, which may seem counter to the point; however",
              "we will benefit from the cesation of weapon skills and offensive magic, which would heal Glavoid."
            ]
          }
        }
      }
    }
  },
  "actions": [
    {
      "commands": ["setVar('vars.face_away_on_spell.trigger', nil)"],
      "delay": 0,
      "frequency": "infinity",
      "scope": "battle",
      "comment": "This will run exactly once at the start of any battle, and ensure that the trigger is cleared."
    },
    {
      "when": ["vars.face_away_on_spell.trigger", "not enemyCastingSpell()"],
      "commands": [
        "wait(vars.face_away_on_spell.trigger.wait or 2)",
        "not vars.face_away_on_spell.trigger.allow_offensive_magic and resumeOffensiveMagic()",
        "not vars.face_away_on_spell.trigger.allow_weapon_skills and resumeWeaponSkills()",
        "setVar('vars.face_away_on_spell.trigger', nil)",
        "log('====== END SPELL FACE-AWAY SEQUENCE ====== ')"
      ],
      "delay": 0
    },
    {
      "when": [
        "not vars.face_away_on_spell.trigger",
        "enemyCastingSpell()",
        "getMatchingSpellFaceAway(vars.face_away_on_spell, enemy_spell, bt)"
      ],
      "commands": [
        "spell_face_away.no_turn and faceEnemy() or faceAway(bt)",
        "setVar('vars.face_away_on_spell.trigger', spell_face_away)",
        "not vars.face_away_on_spell.trigger.allow_offensive_magic and suppressOffensiveMagic()",
        "not vars.face_away_on_spell.trigger.allow_weapon_skills and suppressWeaponSkills()",
        "log(enemy_spell.name, 'detected: BEGIN SPELL FACE-AWAY SEQUENCE ====== ')",
        "vars.face_away_on_spell.distance and align(bt, nil, vars.face_away_on_spell.distance, 8, true)",
        "vars.face_away_on_spell.distance and (vars.face_away_on_spell.no_turn and faceEnemy() or faceAway(bt))",
        "wait(2)"
      ],
      "delay": 0
    },
    {
      "when": "vars.face_away_on_spell.trigger",
      "commands": [
        "vars.face_away_on_spell.trigger.no_turn and faceEnemy() or faceAway(bt)",
        "wait(2)"
      ],
      "delay": 0
    }
  ]
}
