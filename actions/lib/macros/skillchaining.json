{
  "about": {
    "author": "@Kaiconure",
    "comments": [
      "This macroset makes it easier to coordinate skillchains across players."
    ]
  },
  "vars": {
    "ws": {
      "partner_tp_threshold": 700,
      "partner2_tp_threshold": 800,
      "partner3_tp_threshold": 800,
      "partner4_tp_threshold": 800,
      "partner5_tp_threshold": 800,
      "secondary_tp_min": 900,
      "hold_on_buffs": null,
      "default_scd": null,
      "fast_scd": null
    }
  },
  "macros": {
    "equip_for_ws": ["vars.gear and vars.gear.ws and equipMany(vars.gear.ws)"],
    "equip_for_battle": [
      "vars.gear and vars.gear.battle and equipMany(vars.gear.battle)"
    ],
    "check_pre_ws_abilities": [
      "(vars.ws.pre_ws_abilities and canUseAbility(vars.ws.pre_ws_abilities)) or 1 == 1"
    ],
    "close_skillchain": [
      "log('Closing skillchain with:', weapon_skill.name)",
      "$macro:equip_for_ws",
      "waitSkillchainWithAbility() and useAbility(me)",
      "useWeaponSkill()",
      "$macro:equip_for_battle"
    ],
    "open_skillchain": [
      "log('Opening skill chain with:', weapon_skill.name)",
      "$macro:equip_for_ws",
      "recastReady(ability_recast) and useAbility() and wait(0.5)",
      "useWeaponSkill()",
      "$macro:equip_for_battle"
    ],
    "check_using_ws": ["(partyUsingWeaponSkill2)"],
    "check_skillchaining": ["(skillchaining2)"],
    "ws_partners_deferring": [
      "arrayCount(vars.ws.hold_on_buffs) == 0 or not hasBuff(bt, vars.ws.hold_on_buffs)",
      "not vars.ws.partner  or not pinfo[vars.ws.partner]  or (not pinfo[vars.ws.partner].is_engaged  or pinfo[vars.ws.partner].tp <= vars.ws.partner_tp_threshold)",
      "not vars.ws.partner2 or not pinfo[vars.ws.partner2] or (not pinfo[vars.ws.partner2].is_engaged or pinfo[vars.ws.partner2].tp <= vars.ws.partner2_tp_threshold)",
      "not vars.ws.partner3 or not pinfo[vars.ws.partner3] or (not pinfo[vars.ws.partner3].is_engaged or pinfo[vars.ws.partner3].tp <= vars.ws.partner3_tp_threshold)",
      "not vars.ws.partner4 or not pinfo[vars.ws.partner4] or (not pinfo[vars.ws.partner4].is_engaged or pinfo[vars.ws.partner4].tp <= vars.ws.partner4_tp_threshold)",
      "not vars.ws.partner5 or not pinfo[vars.ws.partner5] or (not pinfo[vars.ws.partner5].is_engaged or pinfo[vars.ws.partner5].tp <= vars.ws.partner5_tp_threshold)"
    ],
    "ws_defer_to_secondary": [
      "arrayCount(vars.ws.hold_on_buffs) == 0 or not hasBuff(bt, vars.ws.hold_on_buffs)",
      "vars.ws.is_secondary or (not partyByName(vars.ws.partner or '!!') and (not partyByName(vars.ws.secondary or '!!') or not member.is_engaged or member.tp < vars.ws.secondary_tp_min))"
    ]
  },
  "actions": [
    {
      "when": [
        "vars.ws and vars.ws.terminal_reset and vars.ws.terminal_reset.disabled"
      ],
      "commands": [
        "log('Configuring skillchain delay to prioritize MB damage...')",
        "sendCommand('gbt config -scd %d', vars.ws.default_scd or 5.5)"
      ],
      "frequency": "infinity"
    },
    {
      "when": [
        "vars.ws and vars.ws.terminal_reset and not vars.ws.terminal_reset.disabled"
      ],
      "commands": [
        "log('Configuring skillchain delay to prioritize WS/SC damage...')",
        "sendCommand('gbt config -scd %d', vars.ws.fast_scd or 3)"
      ],
      "frequency": "infinity"
    }
  ]
}
